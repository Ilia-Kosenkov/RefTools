name: Pack and Publish

on:
  push:
    tags:
      - 'v*'
    
env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
jobs:
  build:

    runs-on: ubuntu-latest
        
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.100
    - name: Setup Mono
      run: sudo apt install mono-devel -y
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build -c Release --no-restore
    - name: Test
      run: dotnet test --no-restore --verbosity normal
  
  pack:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.100
      - name: Pack library
        run: dotnet pack -o ./Packed -c Release -p:Deterministic=true
      - uses: actions/upload-artifact@v2.2.1
        with: 
          name: PackedLibrary
          path: ./Packed
  publish:
    runs-on: ubuntu-latest
    needs: pack
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.100
      - name: Download package
        uses: actions/download-artifact@v2.0.6
        with:
          name: PackedLibrary
          path: ./Packed
      - name: Publish to github package registry
        run: dotnet nuget push -s 'https://nuget.pkg.github.com/Ilia-Kosenkov/index.json' -k $GITHUB_TOKEN --skip-duplicate ./Packed/*nupkg
  release:
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Creating release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Download package
        uses: actions/download-artifact@v2.0.6
        with:
            name: PackedLibrary
            path: ./Packed
      - name: Get exact package name
        run: echo "ARTIFACT_FNAME=$(ls ./Packed/*nupkg | grep -Po '(?<=/)[^/]+?$')" >> $GITHUB_ENV
      - name: Get package path
        run: echo "ARTIFACT_PATH=$(ls ./Packed/*nupkg)" >> $GITHUB_ENV
      - name: Add artifact
        uses: actions/upload-release-asset@v1

        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.ARTIFACT_PATH }}
          asset_name: ${{ env.ARTIFACT_FNAME }}
          asset_content_type: application/zip    


